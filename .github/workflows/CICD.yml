name: CI/CD

on:
  push:
    branches: [master, Katende]
  pull_request:
    branches: [master, Katende]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      run: npm ci
    - name: Build and Test
      run: |
        npm run build
        npm test

  deploy_to_production:
    needs: build_and_test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies and build
      run: |
        npm ci
        npm run build
        npm ci --only=production

    - name: Setup Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
        heroku --version

    - name: Login to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login

    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_PRODUCTION_APP_NAME }}
      run: |
        heroku git:remote -a $HEROKU_APP_NAME
        git push heroku master

    - name: Check deployment status
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_PRODUCTION_APP_NAME }}
      run: |
        sleep 30
        status=$(heroku releases -a $HEROKU_APP_NAME --json | jq -r '.[0].status')
        echo "Deployment Status: $status"
        if [ "$status" != "succeeded" ]; then
          echo "Deployment failed or is incomplete"
          exit 1
        fi

    - name: Rollback if deployment fails
      if: failure()
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_PRODUCTION_APP_NAME }}
      run: |
        echo "Deployment failed, rolling back..."
        heroku rollback -a $HEROKU_APP_NAME