name: CI/CD

on:
  push:
    branches: [master, Katende]
  pull_request:
    branches: [master, Katende]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm test
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/

  deploy_to_staging:
    needs: build_and_test
    if: github.ref == 'refs/heads/Katende'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      - name: Deploy to Heroku Staging
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_STAGING_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          appdir: "."
          procfile: "web: npm start"
      - name: Run smoke tests
        run: |
          # Add smoke tests here
          echo "Running smoke tests..."

  deploy_to_production:
    needs: [build_and_test, deploy_to_staging]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      - name: Deploy to Heroku Production
        id: deploy
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_PRODUCTION_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          appdir: "."
          procfile: "web: npm start"
      - name: Check deployment status
        run: |
          status=$(curl -s -n https://api.heroku.com/apps/${{secrets.HEROKU_PRODUCTION_APP_NAME}}/releases \
          -H "Authorization: Bearer ${{secrets.HEROKU_API_KEY}}" \
          -H "Accept: application/vnd.heroku+json; version=3" \
          | jq -r '.[0].status')
          echo "Deployment status: $status"
          if [ "$status" != "succeeded" ]; then
            exit 1
          fi
      - name: Rollback if deployment fails
        if: failure()
        run: |
          echo "Deployment failed, rolling back..."
          heroku rollback ${{secrets.HEROKU_PRODUCTION_APP_NAME}}
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}

  monitor_production:
    needs: deploy_to_production
    runs-on: ubuntu-latest
    steps:
      - name: Check application health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://${{secrets.HEROKU_PRODUCTION_APP_NAME}}.herokuapp.com/health)
          if [ $response != "200" ]; then
            echo "Health check failed"
            exit 1
          fi
      - name: Rollback if health check fails
        if: failure()
        run: |
          heroku rollback ${{secrets.HEROKU_PRODUCTION_APP_NAME}}
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}