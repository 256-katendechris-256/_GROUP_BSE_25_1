name: CI/CD

on:
  push:
    branches: [master, Katende]
  pull_request:
    branches: [master, Katende]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: Install dependencies
      run: npm ci
    - name: Build and Test in Parallel
      run: |
        npm run build &
        npm test &
        wait

  deploy_to_staging:
    needs: build_and_test
    if: github.ref == 'refs/heads/Katende'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache Node.js modules (Staging)
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: Install dependencies and build
      run: |
        npm ci
        npm run build
        npm ci --only=production
    - name: Deploy to Heroku Staging
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{secrets.HEROKU_STAGING_APP_NAME}}
        heroku_email: ${{secrets.HEROKU_EMAIL}}
        appdir: "."
        procfile: "web: npm start"
        justlogin: true

  deploy_to_production:
    needs: build_and_test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache Node.js modules (Production)
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: Install dependencies and build
      run: |
        npm ci
        npm run build
        npm ci --only=production
    - name: Deploy to Heroku Production
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{secrets.HEROKU_PRODUCTION_APP_NAME}}
        heroku_email: ${{secrets.HEROKU_EMAIL}}
        appdir: "."
        procfile: "web: npm start"
        justlogin: true

    - name: Check deployment status
      run: |
        status=$(curl -n https://api.heroku.com/apps/${{secrets.HEROKU_PRODUCTION_APP_NAME}}/releases \
        -H "Authorization: Bearer ${{secrets.HEROKU_API_KEY}}" \
        -H "Accept: application/vnd.heroku+json; version=3" | jq '.[0].status')
        echo "Deployment Status: $status"
      continue-on-error: true

    - name: Rollback if deployment fails
      if: failure()
      run: |
        echo "Deployment failed, rolling back..."
        heroku releases:rollback -a ${{secrets.HEROKU_PRODUCTION_APP_NAME}} \
        -H "Authorization: Bearer ${{secrets.HEROKU_API_KEY}}"
